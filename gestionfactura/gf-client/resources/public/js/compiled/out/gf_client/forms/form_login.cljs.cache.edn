;; Analyzed by ClojureScript 1.7.107
{:use-macros nil, :excludes #{}, :name gf-client.forms.form-login, :imports nil, :requires {t reforms.table, reagent reagent.core, secretary secretary.core, reforms.validation reforms.validation, reagent.session reagent.session, session reagent.session, fc reforms.core, async cljs.core.async, reagent.core reagent.core, reforms.table reforms.table, v reforms.validation, api gf-client.api, cljs.core.async cljs.core.async, gf-client.api gf-client.api, secretary.core secretary.core, reforms.reagent reforms.reagent, reforms.core reforms.core, f reforms.reagent}, :uses {atom reagent.core, render-component reagent.core}, :defs {user {:name gf-client.forms.form-login/user, :file "src\\gf-client\\forms\\form_login.cljs", :line 17, :column 1, :end-line 17, :end-column 10, :meta {:file "C:\\Users\\JuliaABusto\\IdeaProjects\\gestionfactura\\gf-client\\src\\gf-client\\forms\\form_login.cljs", :line 17, :column 6, :end-line 17, :end-column 10}}, ui-state {:name gf-client.forms.form-login/ui-state, :file "src\\gf-client\\forms\\form_login.cljs", :line 18, :column 1, :end-line 18, :end-column 14, :meta {:file "C:\\Users\\JuliaABusto\\IdeaProjects\\gestionfactura\\gf-client\\src\\gf-client\\forms\\form_login.cljs", :line 18, :column 6, :end-line 18, :end-column 14}}, signup-validators {:name gf-client.forms.form-login/signup-validators, :file "src\\gf-client\\forms\\form_login.cljs", :line 20, :column 1, :end-line 20, :end-column 23, :meta {:file "C:\\Users\\JuliaABusto\\IdeaProjects\\gestionfactura\\gf-client\\src\\gf-client\\forms\\form_login.cljs", :line 20, :column 6, :end-line 20, :end-column 23}}, sign-up! {:protocol-inline nil, :meta {:file "C:\\Users\\JuliaABusto\\IdeaProjects\\gestionfactura\\gf-client\\src\\gf-client\\forms\\form_login.cljs", :line 24, :column 7, :end-line 24, :end-column 15, :arglists (quote ([user ui-state]))}, :name gf-client.forms.form-login/sign-up!, :variadic false, :file "src\\gf-client\\forms\\form_login.cljs", :end-column 15, :method-params ([user ui-state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 24, :end-line 24, :max-fixed-arity 2, :fn-var true, :arglists (quote ([user ui-state]))}, signup-view {:protocol-inline nil, :meta {:file "C:\\Users\\JuliaABusto\\IdeaProjects\\gestionfactura\\gf-client\\src\\gf-client\\forms\\form_login.cljs", :line 42, :column 7, :end-line 42, :end-column 18, :arglists (quote ([]))}, :name gf-client.forms.form-login/signup-view, :variadic false, :file "src\\gf-client\\forms\\form_login.cljs", :end-column 18, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 42, :end-line 42, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros {v reforms.validation, reforms.validation reforms.validation, f reforms.reagent, reforms.reagent reforms.reagent}, :cljs.analyzer/constants {:seen #{:placeholder ui-state reforms.binding.core/valid? :password1 :login :on-submit}, :order [:login :password1 reforms.binding.core/valid? ui-state :on-submit :placeholder]}, :doc nil}